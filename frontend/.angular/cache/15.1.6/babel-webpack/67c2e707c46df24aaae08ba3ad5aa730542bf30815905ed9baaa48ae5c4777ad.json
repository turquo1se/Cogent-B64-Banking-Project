{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { RegisterRequest } from '../model/RegisterRequest';\nimport { passwordMatchValidator } from './password-match-validator';\nlet CustomerRegistrationComponent = class CustomerRegistrationComponent {\n  constructor(_formBuilder, http, _userService) {\n    this._formBuilder = _formBuilder;\n    this.http = http;\n    this._userService = _userService;\n    this.request = new RegisterRequest();\n  }\n  ngOnInit() {\n    this.registerForm = this._formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n      confirmPassword: ['', [Validators.required, passwordMatchValidator]],\n      secretQuestion: ['', Validators.required],\n      secretAnswer: ['', Validators.required]\n    });\n  }\n  addCustomer() {\n    if (this.registerForm.valid) {\n      this._userService.registerCustomer(this.request);\n    }\n    return;\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n};\nCustomerRegistrationComponent = __decorate([Component({\n  selector: 'app-customer-registration',\n  templateUrl: './customer-registration.component.html',\n  styleUrls: ['./customer-registration.component.css']\n})], CustomerRegistrationComponent);\nexport { CustomerRegistrationComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAQ,0BAA0B;AAE1D,SAASC,sBAAsB,QAAQ,4BAA4B;AAO5D,IAAMC,6BAA6B,GAAnC,MAAMA,6BAA6B;EAIxCC,YAAoBC,YAAwB,EAAUC,IAAgB,EAAUC,YAAyB;IAArF,iBAAY,GAAZF,YAAY;IAAsB,SAAI,GAAJC,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAF5F,YAAO,GAAoB,IAAIN,eAAe,EAAE;EAE2D;EAE3GO,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,YAAY,CAACK,KAAK,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACxFC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACxFE,eAAe,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACY,QAAQ,EAAEV,sBAAsB,CAAC,CAAC;MACpEe,cAAc,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACY,QAAQ,CAAC;MACzCM,YAAY,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACY,QAAQ;KACvC,CAAC;EACJ;EAEAO,WAAW;IACT,IAAG,IAAI,CAACV,YAAY,CAACW,KAAK,EAAC;MACzB,IAAI,CAACb,YAAY,CAACc,gBAAgB,CAAC,IAAI,CAACC,OAAO,CAAC;;IAElD;EACF;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACd,YAAY,CAACe,QAAQ;EACnC;CACD;AA1BYrB,6BAA6B,eALzCJ,SAAS,CAAC;EACT0B,QAAQ,EAAE,2BAA2B;EACrCC,WAAW,EAAE,wCAAwC;EACrDC,SAAS,EAAE,CAAC,uCAAuC;CACpD,CAAC,GACWxB,6BAA6B,CA0BzC;SA1BYA,6BAA6B","names":["Component","Validators","RegisterRequest","passwordMatchValidator","CustomerRegistrationComponent","constructor","_formBuilder","http","_userService","ngOnInit","registerForm","group","username","required","minLength","maxLength","password","confirmPassword","secretQuestion","secretAnswer","addCustomer","valid","registerCustomer","request","f","controls","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/kleitionbendo/BankingApp/AngularBanking/src/app/customer-registration/customer-registration.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterRequest } from '../model/RegisterRequest';\nimport { UserService } from '../service/user.service';\nimport { passwordMatchValidator } from './password-match-validator';\n\n@Component({\n  selector: 'app-customer-registration',\n  templateUrl: './customer-registration.component.html',\n  styleUrls: ['./customer-registration.component.css']\n})\nexport class CustomerRegistrationComponent implements OnInit{\n  registerForm!: FormGroup;\n  request: RegisterRequest = new RegisterRequest();\n\n  constructor(private _formBuilder:FormBuilder, private http: HttpClient, private _userService: UserService){};\n\n  ngOnInit(): void{\n    this.registerForm = this._formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n      confirmPassword: ['', [Validators.required, passwordMatchValidator]],\n      secretQuestion: ['', Validators.required],\n      secretAnswer: ['', Validators.required]\n    })\n  }\n\n  addCustomer():void{\n    if(this.registerForm.valid){\n      this._userService.registerCustomer(this.request);\n    }\n    return;\n  }\n\n  get f(){\n    return this.registerForm.controls;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
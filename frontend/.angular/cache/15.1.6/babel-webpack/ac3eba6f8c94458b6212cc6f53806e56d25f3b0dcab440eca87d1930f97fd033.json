{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { RegisterRequest } from '../model/RegisterRequest';\nimport { passwordMatchValidator } from './password-match-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../service/user.service\";\nimport * as i4 from \"express\";\nimport * as i5 from \"@angular/common\";\nfunction CustomerRegistrationComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Username is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Username must be at least 3 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Username cannot be more than 30 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CustomerRegistrationComponent_div_10_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, CustomerRegistrationComponent_div_10_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(3, CustomerRegistrationComponent_div_10_div_3_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.maxlength);\n  }\n}\nfunction CustomerRegistrationComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Password must be at least 8 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_15_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Password cannot be more than 50 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CustomerRegistrationComponent_div_15_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, CustomerRegistrationComponent_div_15_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(3, CustomerRegistrationComponent_div_15_div_3_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.maxlength);\n  }\n}\nfunction CustomerRegistrationComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Confirm Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Passwords must match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CustomerRegistrationComponent_div_20_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, CustomerRegistrationComponent_div_20_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.hasError(\"passwordMismatch\"));\n  }\n}\nfunction CustomerRegistrationComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Security Question is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Security Answer is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerRegistrationComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Registered Successfully! \");\n    i0.ɵɵelementStart(2, \"button\", 29);\n    i0.ɵɵtext(3, \"Back to Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CustomerRegistrationComponent {\n  constructor(_formBuilder, http, _userService, router) {\n    this._formBuilder = _formBuilder;\n    this.http = http;\n    this._userService = _userService;\n    this.router = router;\n    this.request = new RegisterRequest();\n    this.showSuccessMessage = false;\n  }\n  ngOnInit() {\n    this.registerForm = this._formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n      confirmPassword: ['', [Validators.required, passwordMatchValidator]],\n      secretQuestion: ['', Validators.required],\n      secretAnswer: ['', Validators.required]\n    });\n  }\n  addCustomer() {\n    if (this.registerForm.valid) {\n      this._userService.registerCustomer(this.request);\n      this.showSuccessMessage = true;\n    }\n    return;\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n}\nCustomerRegistrationComponent.ɵfac = function CustomerRegistrationComponent_Factory(t) {\n  return new (t || CustomerRegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.Router));\n};\nCustomerRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerRegistrationComponent,\n  selectors: [[\"app-customer-registration\"]],\n  decls: 47,\n  vars: 11,\n  consts: [[1, \"container\", \"main-content\", \"mt-5\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"col-md-6\", \"text-center\"], [\"src\", \"/assets/images/bank-logo.png\", \"alt\", \"Bank Logo\", 1, \"img-fluid\"], [1, \"col-md-5\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\"], [\"formControlName\", \"username\", \"type\", \"text\", \"id\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirm-password\"], [\"formControlName\", \"confirmPassword\", \"type\", \"password\", \"id\", \"confirm-password\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"security-question\"], [\"formControlName\", \"secretQuestion\", \"id\", \"security-question\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"value\", \"5\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"secretAnswer\"], [\"formControlName\", \"secretAnswer\", \"type\", \"text\", \"id\", \"security-answer\", \"name\", \"security-answer\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"alert alert-success mt-3\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"alert\", \"alert-success\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ml-3\"]],\n  template: function CustomerRegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"form\", 5)(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerRegistrationComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.request.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CustomerRegistrationComponent_div_10_Template, 4, 3, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerRegistrationComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.request.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, CustomerRegistrationComponent_div_15_Template, 4, 3, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 12);\n      i0.ɵɵtext(18, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 13);\n      i0.ɵɵtemplate(20, CustomerRegistrationComponent_div_20_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 14);\n      i0.ɵɵtext(23, \"Security Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"select\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerRegistrationComponent_Template_select_ngModelChange_24_listener($event) {\n        return ctx.request.secretQuestion = $event;\n      });\n      i0.ɵɵelementStart(25, \"option\", 16);\n      i0.ɵɵtext(26, \"-- Select a security question --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 17);\n      i0.ɵɵtext(28, \"What is your mother's maiden name?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 18);\n      i0.ɵɵtext(30, \"What is your favorite book?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 19);\n      i0.ɵɵtext(32, \"What is the name of your first pet?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\", 20);\n      i0.ɵɵtext(34, \"What is the name of the city where you were born?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"option\", 21);\n      i0.ɵɵtext(36, \"What is your favorite movie?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(37, CustomerRegistrationComponent_div_37_Template, 2, 0, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 6)(39, \"label\", 23);\n      i0.ɵɵtext(40, \"Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerRegistrationComponent_Template_input_ngModelChange_41_listener($event) {\n        return ctx.request.secretAnswer = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(42, CustomerRegistrationComponent_div_42_Template, 2, 0, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 6)(44, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function CustomerRegistrationComponent_Template_button_click_44_listener() {\n        return ctx.addCustomer();\n      });\n      i0.ɵɵtext(45, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(46, CustomerRegistrationComponent_div_46_Template, 4, 0, \"div\", 26);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.request.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.username.invalid && (ctx.f.username.dirty || ctx.f.username.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.request.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.password.invalid && (ctx.f.password.dirty || ctx.f.password.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.confirmPassword.invalid && (ctx.f.confirmPassword.dirty || ctx.f.confirmPassword.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.request.secretQuestion);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.secretQuestion.invalid && (ctx.f.secretQuestion.dirty || ctx.f.secretQuestion.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.request.secretAnswer);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.secretAnswer.invalid && (ctx.f.secretAnswer.dirty || ctx.f.secretAnswer.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSuccessMessage);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 1.0rem;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXItcmVnaXN0cmF0aW9uL2N1c3RvbWVyLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0VBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMHJlbTtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","RegisterRequest","passwordMatchValidator","i0","CustomerRegistrationComponent","constructor","_formBuilder","http","_userService","router","ngOnInit","registerForm","group","username","required","minLength","maxLength","password","confirmPassword","secretQuestion","secretAnswer","addCustomer","valid","registerCustomer","request","showSuccessMessage","f","controls","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/kleitionbendo/BankingApp/AngularBanking/src/app/customer-registration/customer-registration.component.ts","/Users/kleitionbendo/BankingApp/AngularBanking/src/app/customer-registration/customer-registration.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from 'express';\nimport { RegisterRequest } from '../model/RegisterRequest';\nimport { UserService } from '../service/user.service';\nimport { passwordMatchValidator } from './password-match-validator';\n\n@Component({\n  selector: 'app-customer-registration',\n  templateUrl: './customer-registration.component.html',\n  styleUrls: ['./customer-registration.component.css']\n})\nexport class CustomerRegistrationComponent implements OnInit{\n  registerForm!: FormGroup;\n  request: RegisterRequest = new RegisterRequest();\n\n  constructor(private _formBuilder:FormBuilder, private http: HttpClient, private _userService: UserService, private router: Router){};\n\n  ngOnInit(): void{\n    this.registerForm = this._formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n      confirmPassword: ['', [Validators.required, passwordMatchValidator]],\n      secretQuestion: ['', Validators.required],\n      secretAnswer: ['', Validators.required]\n    })\n  }\n\n  showSuccessMessage = false;\n  addCustomer():void{\n    if(this.registerForm.valid){\n      this._userService.registerCustomer(this.request);\n      this.showSuccessMessage = true;\n    }\n    return;\n  }\n\n  get f(){\n    return this.registerForm.controls;\n  }\n}\n","<div class=\"container main-content mt-5\">\n    <div class=\"row d-flex justify-content-center align-items-center\">\n      <div class=\"col-md-6 text-center\">\n        <img src=\"/assets/images/bank-logo.png\" class=\"img-fluid\" alt=\"Bank Logo\">\n      </div>\n      <div class=\"col-md-5\">\n        <form [formGroup]=\"registerForm\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input formControlName=\"username\" type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"request.username\" required>\n                <div *ngIf=\"f.username.invalid && (f.username.dirty || f.username.touched)\">\n                    <div class=\"text-danger\" *ngIf=\"f.username.errors!.required\">\n                        Username is required.\n                    </div>\n                    <div class=\"text-danger\" *ngIf=\"f.username.errors!.minlength\">\n                        Username must be at least 3 characters long.\n                    </div>\n                    <div class=\"text-danger\" *ngIf=\"f.username.errors!.maxlength\">\n                        Username cannot be more than 30 characters long.\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"request.password\" required>\n                <div *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\">\n                    <div class=\"text-danger\" *ngIf=\"f.password.errors!.required\">\n                        Password is required.\n                    </div>\n                    <div class=\"text-danger\" *ngIf=\"f.password.errors!.minlength\">\n                        Password must be at least 8 characters long.\n                    </div>\n                    <div class=\"text-danger\" *ngIf=\"f.password.errors!.maxlength\">\n                        Password cannot be more than 50 characters long.\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"confirm-password\">Confirm Password</label>\n                <input formControlName=\"confirmPassword\" type=\"password\" class=\"form-control\" id=\"confirm-password\" required>\n                <div *ngIf=\"f.confirmPassword.invalid && (f.confirmPassword.dirty || f.confirmPassword.touched)\">\n                    <div class=\"text-danger\" *ngIf=\"f.confirmPassword.errors!.required\">\n                        Confirm Password is required.\n                    </div>\n                    <div class=\"text-danger\" *ngIf=\"registerForm.hasError('passwordMismatch')\">\n                        Passwords must match.\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"security-question\">Security Question</label>\n                <select formControlName=\"secretQuestion\" class=\"form-control\" id=\"security-question\" [(ngModel)]=\"request.secretQuestion\" required>\n                    <option value=\"\">-- Select a security question --</option>\n                    <option value=\"1\">What is your mother's maiden name?</option>\n                    <option value=\"2\">What is your favorite book?</option>\n                    <option value=\"3\">What is the name of your first pet?</option>\n                    <option value=\"4\">What is the name of the city where you were born?</option>\n                    <option value=\"5\">What is your favorite movie?</option>\n                </select>\n                <div class=\"text-danger\" *ngIf=\"f.secretQuestion.invalid && (f.secretQuestion.dirty || f.secretQuestion.touched)\">\n                    Security Question is required.\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"secretAnswer\">Answer</label>\n                <input formControlName=\"secretAnswer\" type=\"text\" class=\"form-control\" id=\"security-answer\" name=\"security-answer\" [(ngModel)]=\"request.secretAnswer\" required>\n                <div class=\"text-danger\" *ngIf=\"f.secretAnswer.invalid && (f.secretAnswer.dirty || f.secretAnswer.touched)\">\n                    Security Answer is required.\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=addCustomer()>Register</button>\n            </div>\n        </form>\n        <!-- success message -->\n        <div *ngIf=\"showSuccessMessage\" class=\"alert alert-success mt-3\">\n            Registered Successfully!\n        <button type=\"button\" class=\"btn btn-success ml-3\">Back to Login</button>\n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Account } from '../model/Account';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/account.service\";\nimport * as i2 from \"../service/customer.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class CreateAccountComponent {\n  constructor(accountService, customerService) {\n    this.accountService = accountService;\n    this.customerService = customerService;\n    this.userId = 0;\n    this.customerId = 0;\n    this.initialDeposit = 0;\n    this.accountType = '';\n    this.account = new Account();\n  }\n  onSubmit() {\n    this.userId = Number(localStorage.getItem('userId'));\n    this.customerService.getCustomerById(this.userId).subscribe(response => {\n      this.customerId = response?.body?.customerId ?? 0;\n      this.account.accBalance = this.initialDeposit;\n      this.account.accType = this.accountType;\n      this.accountService.createAccount(this.customerId, this.account).subscribe(response => {\n        console.log(\"Account created succesfully:\", response.body);\n      }, error => {\n        console.log(error);\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCreateAccountComponent.ɵfac = function CreateAccountComponent_Factory(t) {\n  return new (t || CreateAccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.CustomerService));\n};\nCreateAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateAccountComponent,\n  selectors: [[\"app-create-account\"]],\n  decls: 37,\n  vars: 2,\n  consts: [[1, \"container\", \"main-content\", \"mt-5\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"list-group\"], [\"routerLink\", \"/dashboard\", 1, \"list-group-item\", \"list-group-item-action\"], [\"routerLink\", \"/create-account\", 1, \"list-group-item\", \"list-group-item-action\", \"active\"], [\"href\", \"#\", 1, \"list-group-item\", \"list-group-item-action\"], [1, \"col-md-9\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"initialDeposit\"], [\"type\", \"text\", \"id\", \"initialDeposit\", \"name\", \"initialDeposit\", \"placeholder\", \"Enter Initial Deposit\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"accountType\"], [\"id\", \"accountType\", \"name\", \"accountType\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function CreateAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n      i0.ɵɵtext(5, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 5);\n      i0.ɵɵtext(7, \"Create Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \"Add Beneficiary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 6);\n      i0.ɵɵtext(11, \"Remove Beneficiary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"a\", 6);\n      i0.ɵɵtext(13, \"Transfer Money\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 6);\n      i0.ɵɵtext(15, \"View Statement\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"div\", 8)(18, \"div\", 9)(19, \"b\");\n      i0.ɵɵtext(20, \"Create Account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 10)(22, \"form\", 11);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateAccountComponent_Template_form_ngSubmit_22_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Enter Initial Deposit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.initialDeposit = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\", 15);\n      i0.ɵɵtext(29, \"Select Type of Account:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_select_ngModelChange_30_listener($event) {\n        return ctx.accountType = $event;\n      });\n      i0.ɵɵelementStart(31, \"option\");\n      i0.ɵɵtext(32, \"Savings Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\");\n      i0.ɵɵtext(34, \"Checking Account\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"button\", 17);\n      i0.ɵɵtext(36, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngModel\", ctx.initialDeposit);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.accountType);\n    }\n  },\n  dependencies: [i3.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".list-group[_ngcontent-%COMP%] {\\n    height: 100%;\\n}\\n  \\n  .card[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n    width: 500px;\\n    height: 98%;\\n  }\\n  \\n  .card-header[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  .btn-success[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWFjY291bnQvY3JlYXRlLWFjY291bnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0VBRUU7SUFDRSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3VwIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4gIFxuICAuY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgaGVpZ2h0OiA5OCU7XG4gIH1cbiAgXG4gIC5jYXJkLWhlYWRlciB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgXG4gIC5idG4tc3VjY2VzcyB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,kBAAkB;;;;;;AAU1C,OAAM,MAAOC,sBAAsB;EAOjCC,YAAoBC,cAA8B,EAAUC,eAAgC;IAAxE,mBAAc,GAAdD,cAAc;IAA0B,oBAAe,GAAfC,eAAe;IAN3E,WAAM,GAAW,CAAC;IAClB,eAAU,GAAW,CAAC;IACtB,mBAAc,GAAW,CAAC;IAC1B,gBAAW,GAAW,EAAE;IACxB,YAAO,GAAY,IAAIJ,OAAO,EAAE;EAE8D;EAE9FK,QAAQ;IACN,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpD,IAAI,CAACL,eAAe,CAACM,eAAe,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACK,SAAS,CACxDC,QAAgC,IAAI;MACnC,IAAI,CAACC,UAAU,GAAGD,QAAQ,EAAEE,IAAI,EAAED,UAAU,IAAI,CAAC;MACjD,IAAI,CAACE,OAAO,CAACC,UAAU,GAAG,IAAI,CAACC,cAAc;MAC7C,IAAI,CAACF,OAAO,CAACG,OAAO,GAAG,IAAI,CAACC,WAAW;MACvC,IAAI,CAAChB,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACP,UAAU,EAAE,IAAI,CAACE,OAAO,CAAC,CAACJ,SAAS,CACvEC,QAA+B,IAAI;QAClCS,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEV,QAAQ,CAACE,IAAI,CAAC;MAC5D,CAAC,EACAS,KAAK,IAAI;QACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB,CAAC,CACF;IACH,CAAC,EACAA,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA7BWtB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZnCC,8BAAyC;MAI2CA,yBAAS;MAAAA,iBAAI;MACvFA,4BAAsF;MAAAA,8BAAc;MAAAA,iBAAI;MACxGA,4BAA2D;MAAAA,+BAAe;MAAAA,iBAAI;MAC9EA,6BAA2D;MAAAA,mCAAkB;MAAAA,iBAAI;MACjFA,6BAA2D;MAAAA,+BAAc;MAAAA,iBAAI;MAC7EA,6BAA2D;MAAAA,+BAAc;MAAAA,iBAAI;MAGjFA,+BAAsB;MAGbA,+BAAc;MAAAA,iBAAI;MAEvBA,gCAAuB;MACfA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,gCAAwB;MACMA,uCAAsB;MAAAA,iBAAQ;MAC1DA,kCAAmJ;MAAjEA;QAAA;MAAA,EAA4B;MAA9GA,iBAAmJ;MAErJA,gCAAwB;MACGA,wCAAuB;MAAAA,iBAAQ;MACxDA,mCAA2F;MAA1BA;QAAA;MAAA,EAAyB;MACtFA,+BAAQ;MAAAA,gCAAe;MAAAA,iBAAS;MAChCA,+BAAQ;MAAAA,iCAAgB;MAAAA,iBAAS;MAGvCA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MATuBA,gBAA4B;MAA5BA,4CAA4B;MAI7CA,eAAyB;MAAzBA,yCAAyB","names":["Account","CreateAccountComponent","constructor","accountService","customerService","onSubmit","userId","Number","localStorage","getItem","getCustomerById","subscribe","response","customerId","body","account","accBalance","initialDeposit","accType","accountType","createAccount","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kleitionbendo/BankingApp/AngularBanking/src/app/create-account/create-account.component.ts","/Users/kleitionbendo/BankingApp/AngularBanking/src/app/create-account/create-account.component.html"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Account } from '../model/Account';\nimport { Customer } from '../model/Customer';\nimport { AccountService } from '../service/account.service';\nimport { CustomerService } from '../service/customer.service';\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\nexport class CreateAccountComponent {\n  userId: number = 0;\n  customerId: number = 0;\n  initialDeposit: number = 0;\n  accountType: string = '';\n  account: Account = new Account();\n\n  constructor(private accountService: AccountService, private customerService: CustomerService){}\n\n  onSubmit(): void{\n    this.userId = Number(localStorage.getItem('userId'));\n    this.customerService.getCustomerById(this.userId).subscribe(\n      (response: HttpResponse<Customer>) => {\n        this.customerId = response?.body?.customerId ?? 0;\n        this.account.accBalance = this.initialDeposit;\n        this.account.accType = this.accountType;\n        this.accountService.createAccount(this.customerId, this.account).subscribe(\n          (response: HttpResponse<Account>) =>{\n            console.log(\"Account created succesfully:\", response.body)\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"container main-content mt-5\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <div class=\"list-group\">\n          <a routerLink=\"/dashboard\" class=\"list-group-item list-group-item-action\">Dashboard</a>\n          <a routerLink=\"/create-account\" class=\"list-group-item list-group-item-action active\">Create Account</a>\n          <a href=\"#\" class=\"list-group-item list-group-item-action\">Add Beneficiary</a>\n          <a href=\"#\" class=\"list-group-item list-group-item-action\">Remove Beneficiary</a>\n          <a href=\"#\" class=\"list-group-item list-group-item-action\">Transfer Money</a>\n          <a href=\"#\" class=\"list-group-item list-group-item-action\">View Statement</a>\n        </div>\n      </div>\n      <div class=\"col-md-9\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <b>Create Account</b>\n          </div>\n          <div class=\"card-body\">\n            <form (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                <label for=\"initialDeposit\">Enter Initial Deposit:</label>\n                <input type=\"text\" class=\"form-control\" id=\"initialDeposit\" name=\"initialDeposit\" [(ngModel)]=\"initialDeposit\" placeholder=\"Enter Initial Deposit\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"accountType\">Select Type of Account:</label>\n                <select class=\"form-control\" id=\"accountType\" name=\"accountType\" [(ngModel)]=\"accountType\">\n                    <option>Savings Account</option>\n                    <option>Checking Account</option>\n                </select>\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
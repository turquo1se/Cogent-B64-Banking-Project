{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/account.service\";\nimport * as i2 from \"../service/customer.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction DashboardComponent_div_21_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 18)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"label\", 19);\n    i0.ɵɵelement(10, \"input\", 20)(11, \"span\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", account_r2.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.accNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.accType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, account_r2.accBalance));\n  }\n}\nfunction DashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"table\", 16)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Account Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Account Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Balance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Enable/Disable\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, DashboardComponent_div_21_tr_13_Template, 12, 6, \"tr\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.accounts);\n  }\n}\nexport class DashboardComponent {\n  constructor(accountService, customerService) {\n    this.accountService = accountService;\n    this.customerService = customerService;\n    this.userId = 0;\n    this.customerId = 0;\n    this.accounts = null;\n  }\n  ngOnInit() {\n    // Get user id from local storage\n    console.log(\"In Dashboard Component\");\n    this.userId = Number(localStorage.getItem('userId'));\n    console.log(\"User ID:\", this.userId);\n    // Call customer service to get the customer id\n    this.customerService.getCustomerById(this.userId).subscribe(response => {\n      this.customerId = response?.body?.customerId ?? 0;\n      console.log(\"Customer ID:\", this.customerId);\n      // Call account service to get all accounts for the user\n      this.accountService.getAllAccounts(this.customerId, this.userId).subscribe(response => {\n        this.accounts = response.body;\n        console.log(\"Accounts:\", this.accounts);\n      }, error => {\n        console.log(error);\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.CustomerService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[1, \"container\", \"main-content\", \"mt-5\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"list-group\"], [\"routerLink\", \"/dashboard\", 1, \"list-group-item\", \"list-group-item-action\", \"active\"], [\"routerLink\", \"/create-account\", 1, \"list-group-item\", \"list-group-item-action\"], [\"href\", \"/add-beneficiary\", 1, \"list-group-item\", \"list-group-item-action\"], [\"href\", \"/remove-beneficiary\", 1, \"list-group-item\", \"list-group-item-action\"], [\"href\", \"/transfer\", 1, \"list-group-item\", \"list-group-item-action\"], [\"href\", \"/statement\", 1, \"list-group-item\", \"list-group-item-action\"], [1, \"col-md-9\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"switch\"], [\"type\", \"checkbox\", \"checked\", \"\"], [1, \"slider\", \"round\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n      i0.ɵɵtext(5, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 5);\n      i0.ɵɵtext(7, \"Create Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \"Add Beneficiary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 7);\n      i0.ɵɵtext(11, \"Remove Beneficiary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"a\", 8);\n      i0.ɵɵtext(13, \"Transfer Money\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 9);\n      i0.ɵɵtext(15, \"View Statement\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 11)(18, \"div\", 12);\n      i0.ɵɵtext(19, \" Accounts \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 13);\n      i0.ɵɵtemplate(21, DashboardComponent_div_21_Template, 14, 1, \"div\", 14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngIf\", ctx.accounts);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.RouterLink, i3.CurrencyPipe],\n  styles: [\".card[_ngcontent-%COMP%]{\\n    width: 500px;\\n    height: 100%;\\n}\\n\\n.list-group[_ngcontent-%COMP%]{\\n    height: 100%;\\n}\\n\\n\\n.switch[_ngcontent-%COMP%] {\\n    position: relative;\\n    display: inline-block;\\n    width: 60px;\\n    height: 34px;\\n  }\\n  \\n  \\n  .switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    opacity: 0;\\n    width: 0;\\n    height: 0;\\n  }\\n  \\n  \\n  .slider[_ngcontent-%COMP%] {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ccc;\\n    transition: .4s;\\n  }\\n  \\n  .slider[_ngcontent-%COMP%]:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 26px;\\n    width: 26px;\\n    left: 4px;\\n    bottom: 4px;\\n    background-color: white;\\n    transition: .4s;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%] {\\n    background-color: #2196F3;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:focus    + .slider[_ngcontent-%COMP%] {\\n    box-shadow: 0 0 1px #2196F3;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%]:before {\\n    transform: translateX(26px);\\n  }\\n  \\n  \\n  .slider.round[_ngcontent-%COMP%] {\\n    border-radius: 34px;\\n  }\\n  \\n  .slider.round[_ngcontent-%COMP%]:before {\\n    border-radius: 50%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBLDJDQUEyQztBQUMzQztJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQSwrQkFBK0I7RUFDL0I7SUFDRSxVQUFVO0lBQ1YsUUFBUTtJQUNSLFNBQVM7RUFDWDs7RUFFQSxlQUFlO0VBQ2Y7SUFDRSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxzQkFBc0I7SUFFdEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7SUFDWCxTQUFTO0lBQ1QsV0FBVztJQUNYLHVCQUF1QjtJQUV2QixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsMkJBQTJCO0VBQzdCOztFQUVBO0lBR0UsMkJBQTJCO0VBQzdCOztFQUVBLG9CQUFvQjtFQUNwQjtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xuICAgIHdpZHRoOiA1MDBweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5saXN0LWdyb3Vwe1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLyogVGhlIHN3aXRjaCAtIHRoZSBib3ggYXJvdW5kIHRoZSBzbGlkZXIgKi9cbi5zd2l0Y2gge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiAzNHB4O1xuICB9XG4gIFxuICAvKiBIaWRlIGRlZmF1bHQgSFRNTCBjaGVja2JveCAqL1xuICAuc3dpdGNoIGlucHV0IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgfVxuICBcbiAgLyogVGhlIHNsaWRlciAqL1xuICAuc2xpZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLjRzO1xuICAgIHRyYW5zaXRpb246IC40cztcbiAgfVxuICBcbiAgLnNsaWRlcjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGhlaWdodDogMjZweDtcbiAgICB3aWR0aDogMjZweDtcbiAgICBsZWZ0OiA0cHg7XG4gICAgYm90dG9tOiA0cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XG4gICAgdHJhbnNpdGlvbjogLjRzO1xuICB9XG4gIFxuICBpbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcbiAgfVxuICBcbiAgaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcbiAgICBib3gtc2hhZG93OiAwIDAgMXB4ICMyMTk2RjM7XG4gIH1cbiAgXG4gIGlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XG4gIH1cbiAgXG4gIC8qIFJvdW5kZWQgc2xpZGVycyAqL1xuICAuc2xpZGVyLnJvdW5kIHtcbiAgICBib3JkZXItcmFkaXVzOiAzNHB4O1xuICB9XG4gIFxuICAuc2xpZGVyLnJvdW5kOmJlZm9yZSB7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IA6BgBA,8BAAgE;IAC1DA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAmC;;IAAAA,iBAAK;IAC5CA,0BAAI;IAEAA,6BAA+B;IAEjCA,iBAAQ;;;;IARyBA,2CAA0B;IACzDA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAqB;IAArBA,wCAAqB;IACrBA,eAAmC;IAAnCA,iEAAmC;;;;;IAd/CA,+BAA+C;IAInCA,8BAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,4BAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,uBAAO;IAAAA,iBAAK;IAChBA,2BAAI;IAAAA,+BAAc;IAAAA,iBAAK;IAG3BA,8BAAO;IACLA,4EAUK;IACPA,iBAAQ;;;;IAXkBA,gBAAW;IAAXA,yCAAW;;;ACjBnD,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,cAA8B,EAAUC,eAAgC;IAAxE,mBAAc,GAAdD,cAAc;IAA0B,oBAAe,GAAfC,eAAe;IAJ3E,WAAM,GAAW,CAAC;IAClB,eAAU,GAAW,CAAC;IACtB,aAAQ,GAAmB,IAAI;EAEgE;EAE/FC,QAAQ;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpDL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAAC;IAEpC;IACA,IAAI,CAACJ,eAAe,CAACQ,eAAe,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACK,SAAS,CACxDC,QAAgC,IAAI;MACnC,IAAI,CAACC,UAAU,GAAGD,QAAQ,EAAEE,IAAI,EAAED,UAAU,IAAI,CAAC;MACjDT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACQ,UAAU,CAAC;MAE5C;MACA,IAAI,CAACZ,cAAc,CAACc,cAAc,CAAC,IAAI,CAACF,UAAU,EAAE,IAAI,CAACP,MAAM,CAAC,CAACK,SAAS,CACvEC,QAAQ,IAAI;QACX,IAAI,CAACI,QAAQ,GAAGJ,QAAQ,CAACE,IAAI;QAC7BV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACW,QAAQ,CAAC;MACzC,CAAC,EACAC,KAAK,IAAI;QACRb,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;MACpB,CAAC,CACF;IACH,CAAC,EACAA,KAAK,IAAI;MACRb,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AAlCWlB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ/BxB,8BAAyC;MAIgDA,yBAAS;MAAAA,iBAAI;MAC9FA,4BAA+E;MAAAA,8BAAc;MAAAA,iBAAI;MACjGA,4BAA0E;MAAAA,+BAAe;MAAAA,iBAAI;MAC7FA,6BAA6E;MAAAA,mCAAkB;MAAAA,iBAAI;MACnGA,6BAAmE;MAAAA,+BAAc;MAAAA,iBAAI;MACrFA,6BAAoE;MAAAA,+BAAc;MAAAA,iBAAI;MAG1FA,gCAAsB;MAGhBA,2BACF;MAAAA,iBAAM;MACNA,gCAAuB;MACrBA,uEAwBM;MACRA,iBAAM;;;MAzB2BA,gBAAc;MAAdA,mCAAc","names":["i0","DashboardComponent","constructor","accountService","customerService","ngOnInit","console","log","userId","Number","localStorage","getItem","getCustomerById","subscribe","response","customerId","body","getAllAccounts","accounts","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/kleitionbendo/BankingApp/AngularBanking/src/app/dashboard/dashboard.component.html","/Users/kleitionbendo/BankingApp/AngularBanking/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["<div class=\"container main-content mt-5\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"list-group\">\n        <a routerLink=\"/dashboard\" class=\"list-group-item list-group-item-action active\">Dashboard</a>\n        <a routerLink=\"/create-account\" class=\"list-group-item list-group-item-action\">Create Account</a>\n        <a href=\"/add-beneficiary\" class=\"list-group-item list-group-item-action\">Add Beneficiary</a>\n        <a href=\"/remove-beneficiary\" class=\"list-group-item list-group-item-action\">Remove Beneficiary</a>\n        <a href=\"/transfer\" class=\"list-group-item list-group-item-action\">Transfer Money</a>\n        <a href=\"/statement\" class=\"list-group-item list-group-item-action\">View Statement</a>\n      </div>\n    </div>\n    <div class=\"col-md-9\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          Accounts\n        </div>\n        <div class=\"card-body\">\n          <div class=\"table-responsive\" *ngIf=\"accounts\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Account Number</th>\n                  <th>Account Type</th>\n                  <th>Balance</th>\n                  <th>Enable/Disable</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let account of accounts\" [ngClass]=\"account.status\">\n                  <td>{{ account.accNumber }}</td>\n                  <td>{{ account.accType }}</td>\n                  <td>{{ account.accBalance | currency }}</td>\n                  <td>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" checked>\n                      <span class=\"slider round\"></span>\n                    </label>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Account } from '../model/Account';\nimport { Customer } from '../model/Customer';\nimport { AccountService } from '../service/account.service';\nimport { CustomerService } from '../service/customer.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  userId: number = 0;\n  customerId: number = 0;\n  accounts: Account[] | null=null;\n\n  constructor(private accountService: AccountService, private customerService: CustomerService) {}\n\n  ngOnInit(): void{\n    // Get user id from local storage\n    console.log(\"In Dashboard Component\")\n    this.userId = Number(localStorage.getItem('userId'));\n    console.log(\"User ID:\", this.userId);\n\n    // Call customer service to get the customer id\n    this.customerService.getCustomerById(this.userId).subscribe(\n      (response: HttpResponse<Customer>) => {\n        this.customerId = response?.body?.customerId ?? 0;\n        console.log(\"Customer ID:\", this.customerId);\n\n        // Call account service to get all accounts for the user\n        this.accountService.getAllAccounts(this.customerId, this.userId).subscribe(\n          (response) => {\n            this.accounts = response.body;\n            console.log(\"Accounts:\", this.accounts);\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}